{{- $deploymentTag := .Values.image.tag | default .Chart.AppVersion -}}

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "_.fullname" . }}
  labels:
    {{- include "_.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "_.selectorLabels" . | nindent 6 }}
  {{- with .Values.strategy }}
  strategy:
    {{- toYaml . | nindent 4 }}
  {{- end }}
  template:
    metadata:
      labels:
        {{- include "_.selectorLabels" . | nindent 8 }}
    spec:
      {{- $imagePullSecrets := concat (.Values.imagePullSecrets | default list) (.Values.global.imagePullSecrets | default list) -}}
      {{- with $imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ default .Values.global.serviceAccountName .Values.serviceAccountName }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ include "_.fullname" . }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ $deploymentTag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- $env := merge (.Values.global.env | default dict) (.Values.env | default dict) -}}
            {{ range $k, $v := $env }}
            - name: {{ $k | quote }}
              value: {{ $v | quote }}
            {{- end }}
          envFrom:
            {{- if .Values.envSecrets }}
            {{- range .Values.envSecrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            initialDelaySeconds: 1
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if .Values.affinity }}
      affinity: {{ .Values.affinity | toYaml | nindent 8 }}
      {{- else if .Values.affinityTemplate }}
      affinity: {{ tpl .Values.affinityTemplate . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
